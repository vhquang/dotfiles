export PATH=$HOME/bin:/usr/local/bin:/usr/local/include:/usr/local/sbin:$PATH


# setup python environment
if type "virtualenvwrapper.sh" > /dev/null; then
    source virtualenvwrapper.sh
fi
export PIP_REQUIRE_VIRTUALENV=true
gpip(){
   # bypass pip requirement for active virtualenv, use for update global package
   # ex: gpip install --upgrade pip setuptools wheel virtualenv
   PIP_REQUIRE_VIRTUALENV="" pip "$@"
}

export PATH="$HOME/miniconda3/bin:$PATH"


# build system for arrow
export ARROW_BUILD_TYPE=release

## arrow's env for pip
# export ARROW_HOME=$HOME/code/arrow-dist
# export PARQUET_HOME=$HOME/code/arrow-dist
# export LD_LIBRARY_PATH=$HOME/code/arrow-dist/lib:$LD_LIBRARY_PATH

## arrow's env for conda
export ARROW_BUILD_TOOLCHAIN=$CONDA_PREFIX
export PARQUET_BUILD_TOOLCHAIN=$CONDA_PREFIX
export ARROW_HOME=$CONDA_PREFIX
export PARQUET_HOME=$CONDA_PREFIX

# [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*


# path for mysql
[[ -d "/usr/local/mysql/bin" ]] && export PATH="$PATH:/usr/local/mysql/bin"

# rabbitMQ
# [[ -d "/usr/local/sbin" ]] && export PATH="/usr/local/sbin:${PATH}"

export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# path of openCV
# export PATH="/usr/local/opt/opencv3/bin:$PATH"


if [[ -d "$HOME/.pyenv" ]]; then
	eval "$(pyenv init -)"
    export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"
fi

# path for CUDA and cudaDNN
export CUDA_HOME=/usr/local/cuda
export DYLD_LIBRARY_PATH=/usr/local/cuda/lib:/usr/local/cuda/extras/CUPTI/lib
export LD_LIBRARY_PATH=$DYLD_LIBRARY_PATH
export PATH=$DYLD_LIBRARY_PATH:$PATH:/Developer/NVIDIA/CUDA-9.1/bin
